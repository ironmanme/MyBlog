[{"title":"我的第一篇博客(搭建blog)","url":"%2F2018%2F03%2F24%2F%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F","content":"{% fi 我的第一篇博客/git_hexo.jpeg, GitHubPages + Hexo, GitHubPages + Hexo %}\n<div class=\"text-center\">\n    <h3>今天搭建了自己的博客 😝</h3>\n</div>\n\n花费了 **一天半** 的时间，终于把我的 **个人博客** 搭建完成，下面我写下搭建博客的过程，其实挺简单的 🙃\n\n---\n\n<!-- more -->\n\n### 博客所用技术 （Hexo + Next + GitHubPages）\n\n在文章的末尾我会 **贴出** 我基于 **Hexo + Next + GitHubPages** 搭建博客，所参考的文章链接。\n\n如果，你也想用这些技术搭建漂亮的博客，你就需要了解下 `Hexo` 、 `Next` 、 `GitHubPages` 这三个单词，下面会逐个解释。\n\n####  什么是 Hexo\n> **Hexo** 是一个快速、简洁且高效的博客框架。**Hexo** 使用 *Markdown*（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 -- [Hexo](https://hexo.io/zh-cn/docs/index.html)\n\n####  什么是 Next\n\n> **NexT** 是 **Hexo**的一个主题（theme），拥有丰富而简单的配置，结合第三方服务，可以打造属于您自己的博客。 -- [Next](http://theme-next.iissnan.com)\n\n#### 什么是 GitHubPages\n\n> GitHub Pages is a static site hosting service designed to host your personal, organization, or project pages directly from a GitHub repository. -- [GitHubPages](https://help.github.com/articles/what-is-github-pages/)\n\n**翻译过来大概是：** GitHub页面是一个静态的站点托管服务，旨在从GitHub存储库中直接托管您的个人、组织或项目页面。\n\n所以，`Hexo` 、 `Next` 、 `GitHubPages` 配合起来就可以免费搭建漂亮的 **个人博客** , 是不是很爽 😆\n\n----\n### 如何\b基于 \bHexo 搭建博客\n\n基于 \bHexo 搭建博客，只需简单的几步，就能完成 **个人博客** 的搭建。\n\n#### \b准备工作\n\n##### 下载安装 \b`nodejs`\n\n`node` 会自带 \b`npm` 包管理工具，*建议安装* `yarn` 来管理依赖 （\b因为 `hexo` 貌似是用 `yarn` 管理 **依赖** 的，否则可以回出现 **依赖\b** 问题）。\n\n**Mac** 用户可以用 `brew` 安装，**Windows** 可以用 `cmder` 或去官网下安装包程序。\n\n```\bvim\n    brew install node\n```\n\n然后用 \b`npm` 安装 `yarn`\n\n```vim\n    npm install yarn\n```\n\n##### 安装\b `git`\n\n**Mac\b** 用户可用刚安装的 `yarn` 包管理工具安装 `git`，**Windows** 可以 `cmder` 或去官网下安装包程序。\n\n```vim\n    yarn add git -g\n```\n\n##### 安装 `hexo`\n\n进入你的项目目录，比如我的是 `myblog` ，\n\n```vim\n    cd myblog\n```\n\n然后用 `\byarn` 安装 `hexo`。\n\n```vim\n    yarn add hexo -S\n```\n\n此时，环境都准备好了，就可以开始搭建 **\bhexo** 博客了 😜\n\n----\n#### 搭建本地博客\n\n##### 进入你的项目目录\n\n比如：我的是 `myblog`。\n\n```vim\n    cd myblog\n```\n\n##### 项目初始化\n\n项目初始化，会自动生成博客模板，以后写博客只需用 `markdown` 语法编写对应的 `.md` 文件即可 ✍️ 。\n\n```vim\n    hexo init\n```\n##### 安装所有的依赖 \n\n建议使用用 `yarn` ，否则会出现依赖问题（*在本文之后有相关介绍*）。\n\n```vim\n    yarn install\n```\n##### 最后，启动本地服务\n\n在浏览器输入 `localhost:4000` 即可预览博客\n\n```vim\n    hexo server\n```\n\n**如图:** 🌁 </br>\n<img src=\"我的第一篇博客/hexoinit.png\" alt=\"hexo\" width=\"100%\" title=\"hexo最初的样子 😂\" align=\"center\" />\n\n----\n### 关联 GitHub\n\n通过 **GitHub** 的 `pages` 功能，我们可以把我们的博客托管到 **GitHub** ，而无需去购买云服务器 😋 ,轻松愉快的构建免费博客。\n\n#### 创建 GitHub 账户\n\n我相信 🤔 大家应该都有 **GitHub** 账号了，如果没有可去 [GitHub](https://github.com/) 官网按照步骤创建账户即可。\n\n#### 配置关联 GitHub\n\n- 有了 **GitHub** 账号之后，登录 **GitHub** ，创建一个项目，项目名称最后和你本地的项目一致，比如： `myblog`\n\n{% note danger %}\n项目建好之后，一定要开启 **GitHub Pages** 功能 ⚠️\n{% endnote %}\n\n- 点击如图 `Settings` 开启，**GitHub Pages** 功能\n\n<img src=\"我的第一篇博客/gitpages.png\" alt=\"GitHubPages\" width=\"100%\" title=\"GitHubPages Settings\" align=\"center\" />\n\n- 选择 `master branch` , 然后 **Save** \n\n<img src=\"我的第一篇博客/gitpages2.png\" alt=\"GitHubPages\" width=\"100%\" title=\"GitHubPages Source\" align=\"center\" />\n\n- 复制你的项目连接，如图\n\n<img src=\"我的第一篇博客/gitpages3.png\" alt=\"GitHubPages\" width=\"100%\" title=\"GitHubPages URL\" align=\"center\" />\n\n- 然后在你本地项目根目录找到 `_config.yml` 文件，粘贴到以下位置\n\n```yml\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: https://github.com/persilee/MyBlog.git\n  branch: master\n```\n\n#### 完成关联\n\n完成以上步骤之后，就可以把自己本地项目推送到 **GitHub** 托管，只剩下3步 😋\n\n1. 安装 `hexo-deployer-git` 插件（可以通过简单的命令,完成文件生成及推送功能）\n\n```vim\n    yarn add hexo-deployer-git -S\n```\n\n2. 运行 `hexo g` （生成本地文件）\n\n```vim\n    hexo g\n```\n\n3. 运行 `hexo d` （将本地文件推送到 **GitHub** ，和 `git push` 功能相同）\n\n```vim\n    hexo d\n```\n此时，**GitHub** 应该已给你生成了访问连接，连接格式是: `你的账号名称` + `.github.io` + `\\项目名称`,也可以去刚才 `GitHubPages` 设置页面查看\n例如我的：[https:\\\\persilee.github.io\\MyBlog](https:\\\\persilee.github.io\\MyBlog)\n\n这时，你就可以把连接发给小伙伴们，他们通过连接都可以访问你的 **博客** 🙃。\n\n{% note danger %}\n**这里需要注意的地方是：在执行 `hexo g` 命令时候，可能会出现以下 `error`,应该是 `yarn` 和 `npm` 冲突的依赖的问题，所以前面文章建议使用 `yarn` 管理包依赖**\n{% endnote %}\n\n```vim\nERROR Plugin load failed: hexo-renderer-marked\nError: EISDIR: illegal operation on a directory, read\nERROR Plugin load failed: hexo-server\nError: EISDIR: illegal operation on a directory, read\nERROR Plugin load failed: hexo-renderer-stylus\nError: EISDIR: illegal operation on a directory, read\n```\n\n解决办法，先用 `yarn` 分别移除，再重新安装，如下\n\n```vim\n## 先移除\nyarn remove hexo-renderer-marked\n\nyarn remove hexo-renderer-stylus\n\nyarn remove hexo-server\n\n## 再安装\nyarn add hexo-renderer-marked -S \n\nyarn add hexo-renderer-stylus -S\n\nyarn add hexo-server -S\n```\n\n在执行 `hexo g` ,顺利执行 👌\n\n----\n\n### 绑定域名\n\n我们已经可以通过 **GitHub** 分发给我的地址访问 **博客** ，但是，这对于我们这些爱 **折腾** 的 **程序猿👨‍💻‍** 来说，还不够，弄个自己的 **域名** 才够拉风😂。\n\n于是。。。\n\n开始绑定自己的 **域名** [lishaoy.net](https://lishaoy.net)\n\n然而，我们绑定 **域名** 之后，只支持 `http` 协议，这样我们在 **Google** 浏览器访问时，会有不安全标准，而且，很容易被插入广告，于是。。。**折腾** 走起🌝：搞个 `https`\n\n转入正题，经过一番 **折腾** ，采用第三方服务 [Netlify](https://app.netlify.com/sites/lishaoy/settings/domain#ssl-tls-certificate) 来提供免费的SSL/TLS证书。\n\n当然，这里我提供2种方式绑定域名，一种是 `HTTP` (不安全的网络协议)、一种是 `HTTPS` （安全的网络协议，在 **Google** 浏览器上回有一把小锁，如图）\n\n<img src=\"我的第一篇博客/lock.png\" alt=\"Netlity\" width=\"100%\" title=\"Google HTTPS 状态标识\" align=\"center\" />\n\n#### `HTTP` 绑定域名\n\n##### 设置域名解析规则\n\n首先，我们需要去运行商，新增域名解析规则，如图\n\n<img src=\"我的第一篇博客/domain.png\" alt=\"domain\" width=\"100%\" title=\"域名解析规则\" align=\"center\" />\n\n##### 新增 `CNAME` 文件\n\n配置好域名解析规则之后，还需要在项目的 `.\\source\\` 路径下新增 `CNAME` 文件，输入内容 `你的域名` ,如：[lishaoy.net](https://lishaoy.net)\n##### 重新新生成文件，推送到GitHub\n\n重新生成文件，运行 `hexo g`\n\n```vim\n    hexo g\n```\n推送 **GitHub**\n\n```vim\n    hexo d\n```\n\n-----\n\n#### `HTTPS` 绑定域名\n##### 注册 `Netlify` 账号\n\n首先，我们需要注册一个 [Netlify](https://app.netlify.com/sites/lishaoy/settings/domain#ssl-tls-certificate) 账号，地址：[Netlify](https://app.netlify.com/sites/lishaoy/settings/domain#ssl-tls-certificate) ，可以选择用 **GitHub** 注册。\n\n<img src=\"我的第一篇博客/netlify.png\" alt=\"Netlity\" width=\"100%\" title=\"Netlity Login\" align=\"center\" />\n\n##### 新增站点\n\n- 点击如图按钮 `New site from Git`,来新增 **站点**\n\n<img src=\"我的第一篇博客/netlify1.png\" alt=\"Netlity\" width=\"100%\" title=\"New site from Git\" align=\"center\" />\n\n- 然后，点击如图按钮 `GitHub` \n\n<img src=\"我的第一篇博客/netlify2.png\" alt=\"Netlity\" width=\"100%\" title=\"GitHub\" align=\"center\" />\n\n- 选择你的项目，比如我的 `MyBlog`\n\n<img src=\"我的第一篇博客/netlify3.png\" alt=\"Netlity\" width=\"100%\" title=\"Select Site\" align=\"center\" />\n\n- 点击 `Deploy site`\n\n<img src=\"我的第一篇博客/netlify4.png\" alt=\"Netlity\" width=\"100%\" title=\"Deploy site\" align=\"center\" />\n\n- 看到如图页面，表示成功，再点击 `Site settings` \n\n<img src=\"我的第一篇博客/netlify5.png\" alt=\"Netlity\" width=\"100%\" title=\"Getting started\" align=\"center\" />\n\n<img src=\"我的第一篇博客/netlify6.png\" alt=\"Netlity\" width=\"100%\" title=\"Site details\" align=\"center\" />\n\n- 再点击 `Change site name` 修改短名称，方便记忆\n\n- 在自己的域名管理中设置 **DNS** ，我使用的是 **阿里云** ，在管理界面添加如图规则\n\n<img src=\"我的第一篇博客/netlify7.png\" alt=\"Netlity\" width=\"100%\" title=\"设置域名规则\" align=\"center\" />\n\n- 在点击 `Domain management` 下的 `HTTPS` ，按照步骤完成操作，稍等片刻，即可看到我们的 **域名** 已经上锁 🔐 \n\n<img src=\"我的第一篇博客/netlify8.png\" alt=\"Netlity\" width=\"100%\" title=\"lishaoy.net上锁\" align=\"center\" />\n\n😝 😜 😄 😆 😂 🤣 ...\n\n----\n### 更换 `next` 主题\n\n`hexo` 的主题很多，你可以选择其他喜欢 ❤️ 的主题，我使用的是 `next` 主题。\n\n#### 安装 `next` 主题\n\n执行以下命令，安装 `next` 主题\n\n```vim\n    git clone https://github.com/iissnan/hexo-theme-next.git themes/next\n```\n\n#### 更改配置文件\n\n修改根目录下的 `./_config.yml` 文件，如下\n\n```vim\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: next\n```\n\n##### 重新新生成文件，推送到GitHub\n\n重新生成文件，运行 `hexo g`\n\n```vim\n    hexo g\n```\n推送 **GitHub**\n\n```vim\n    hexo d\n```\n\n也可以运行以下命令，启动一个本地服务，调试确定无问题之后再 推送到 **GitHub** \n\n```vim\n    hexo s --debug\n```\n\n本地服务启动后，可以在浏览器输入 `http://localhost:4000` 预览，如图\n\n<img src=\"我的第一篇博客/nextpage.png\" alt=\"next\" width=\"100%\" title=\"next 主题最初的样子🙃\" align=\"center\" />\n\n**本文到此告一段落，关于 `next` 主题美化的问题，可以参考以下链接文章 🤗**\n\n以下是我搭建 **博客** 参考的文章链接 👇 \n\n{% note default %} \n\n- [hexo的next主题个性化教程:打造炫酷网站](http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html)\n- [Hexo搭建博客教程](https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/)\n- [Hexo博客搭建全攻略(二)：NexT主题配置](https://www.jianshu.com/p/d95cff938277)\n\n {% endnote %}\n","tags":["Blog"],"categories":["技术"]}]